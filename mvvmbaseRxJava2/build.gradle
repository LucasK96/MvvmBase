apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// for Bintray
def projectVersionCodeNr = Integer.parseInt(projectVersionCode)
def libGit = libGit
def libUrl = libUrl
def libDescription = libRxJava2Description
def libGroupId = libGroupId
def libArtifactId = libRxJava2ArtifactId

// for Maven
group = libGroupId
def projectVersionName = projectVersionName

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode = projectVersionCodeNr
        versionName = projectVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        // This is necessary to allow the data binding annotation processor to generate
        // the BR fields from Bindable annotations
        getTestOptions().getUnitTests().setIncludeAndroidResources(true)

        enabled = true
        enabledForTests = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation project(":mvvmbase")

    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

    testAnnotationProcessor "androidx.databinding:databinding-compiler:$gradleToolsVersion"
    kaptTest "androidx.databinding:databinding-compiler:$gradleToolsVersion"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


apply plugin: 'com.github.dcendents.android-maven'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            packaging 'aar'
            groupId libGroupId
            artifactId libArtifactId

            // Add your description here
            name libArtifactId
            description libDescription
            url libUrl

            // Set your license
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url libLicenseUrl
                }
            }
            scm {
                connection libGit
                developerConnection libGit
                url libUrl
            }
        }

    }
}

apply plugin: 'com.jfrog.bintray'

version = projectVersionName

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

artifacts {
    archives sourcesJar
}

// Bintray
bintray {
    user = private_bintray_user
    key = private_bintray_apikey

    configurations = ['archives']
    pkg {
        repo = libGroupId
        name = libArtifactId
        desc = libDescription
        websiteUrl = libUrl
        vcsUrl = libGit
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
        version {
            name = projectVersionName
            desc = libDescription
            gpg {
                sign = true
                passphrase = private_bintray_gpg_passphrase
            }
        }
    }
}
